{"version":3,"file":"static/js/812.56517db5.chunk.js","mappings":"8SAGMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAFiB,gCAIjB,IAAMC,EAAmB,mCAAG,8GAEMD,EAAAA,EAAAA,GAAM,8BAAD,OAA+BD,IAF1C,cAEdG,EAFc,yBAGbA,EAAYC,KAAKC,SAHJ,sCAKd,IAAIC,MAAJ,MALc,yDAAH,qDAAzB,SAWeC,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,iGAE8BP,EAAAA,EAAAA,GAAM,wBAAD,OAAyBD,EAAzB,kBAA0CQ,EAA1C,YAFnC,cAEcC,EAFd,yBAGeA,EAAQL,KAAKC,SAH5B,wHAUeK,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,iGAE6BV,EAAAA,EAAAA,GAAM,SAAD,OAAUU,EAAV,oBAAwBX,IAF1D,cAEcY,EAFd,yBAGeA,EAAOR,MAHtB,sCAKc,IAAIE,MAAJ,MALd,yFAUeO,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBF,GAAzB,iGAE8BV,EAAAA,EAAAA,GAAM,SAAD,OAAUU,EAAV,4BAAgCX,IAFnE,cAEcc,EAFd,yBAGeA,EAAQV,KAAKW,MAH5B,sCAKc,IAAIT,MAAJ,MALd,yFASeU,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BL,GAA5B,iGAE8BV,EAAAA,EAAAA,GAAM,SAAD,OAAUU,EAAV,4BAAgCX,EAAhC,YAFnC,cAEcc,EAFd,yBAGeA,EAAQV,KAAKC,SAH5B,sCAKc,IAAIC,MAAJ,MALd,gF,6GC3CaW,E,OAAQC,EAAAA,GAAH,yC,0BC6BlB,EAzBkB,WACd,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAUjB,OAPAC,EAAAA,EAAAA,YAAU,YAEFtB,EAAAA,EAAAA,MAAsBuB,MAAK,SAAAC,GAAI,OAAIL,EAAYK,EAAhB,GAGtC,GAAC,KAEM,iCACJ,SAACT,EAAD,8BACE,wBACGG,EAASO,KAAI,gBAAGhB,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,MAAP,OAAoB,yBAAa,SAAC,KAAD,CAC3CC,GAAE,iBAAYlB,GACdmB,MAAO,CAACC,KAAKT,GAF8B,UAG9C,wBAAKM,OAHqCjB,EAA7B,QAQzB,C","sources":["getApi/getApi.js","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c939ec4794622751dcf7fba01c4a07e9';\naxios.defaults.baseURL = BASE_URL;\n\nconst fetchTrendingMovies = async() => {\n    try {\n        const trendMovies = await axios(`trending/movie/day?api_key=${API_KEY}`);\n        return trendMovies.data.results;\n    } catch (error) {\n        throw new Error(error)\n    }\n}\n\n\n\nasync function fetchFilmByName(query){\n    try {\n        const nameMov = await axios(`search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n        return nameMov.data.results;\n    } catch (error) {\n        \n    }\n}\n\n\nasync function fetchMovieDetails(id) {\n    try {\n        const movDet = await axios(`movie/${id}?api_key=${API_KEY}`);\n        return movDet.data;\n    } catch (error) {\n        throw new Error(error)\n    }\n}\n\n\nasync function fetchCast(id) {\n    try {\n        const movCast = await axios(`movie/${id}/credits?api_key=${API_KEY}`);\n        return movCast.data.cast\n    } catch (error) {\n        throw new Error(error)\n    }\n}\n\nasync function fetchReviews(id) {\n    try {\n        const movCast = await axios(`movie/${id}/reviews?api_key=${API_KEY}&page=1`);\n        return movCast.data.results\n    } catch (error) {\n        throw new Error(error)\n    }\n}\n\n\nexport {fetchTrendingMovies, fetchFilmByName, fetchMovieDetails,fetchCast, fetchReviews}","import styled from '@emotion/styled';\n\n\nexport const Title = styled.h1`\nfont-size:24px;\n`;\n","import { fetchTrendingMovies } from \"getApi/getApi\";\nimport { useState,useEffect } from \"react\";\nimport { Title} from \"./HomePage.styled\";\nimport { Link, useLocation } from 'react-router-dom';\n\n\n\n const HomePage = () => {\n    const [trendMov, setTrendMov] = useState([]);\n    const location = useLocation()\n\n\n    useEffect(() => {\n        const fetchMovies = () => {\n            fetchTrendingMovies().then(resp => setTrendMov(resp))\n        }\n        fetchMovies();\n    },[])\n    \n    return (<>\n        <Title>Trending today</Title>\n          <ul>\n            {trendMov.map(({ id, title }) => (<li key={id}><Link\n                to={`movies/${id}`}\n                state={{from:location}}\n            ><h3>{title}</h3></Link></li>))}\n        </ul>\n    </>\n\n)\n}\n\nexport default HomePage;"],"names":["API_KEY","axios","fetchTrendingMovies","trendMovies","data","results","Error","fetchFilmByName","query","nameMov","fetchMovieDetails","id","movDet","fetchCast","movCast","cast","fetchReviews","Title","styled","useState","trendMov","setTrendMov","location","useLocation","useEffect","then","resp","map","title","to","state","from"],"sourceRoot":""}