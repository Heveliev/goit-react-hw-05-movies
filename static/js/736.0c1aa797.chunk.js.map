{"version":3,"file":"static/js/736.0c1aa797.chunk.js","mappings":"iPACaA,EAAMC,EAAAA,EAAAA,IAAH,oDAKHC,EAAOD,EAAAA,EAAAA,GAAH,kE,SCwBjB,EAzBc,WACV,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,GAAUN,GAASO,MAAK,SAAAC,GAAG,OAAIJ,EAAQI,EAAZ,GAG9B,GAAE,CAACR,KAGA,8BAEKG,EAAKM,QAAS,SAACV,EAAD,UAAOI,EAAKO,KAAI,SAAAC,GAAG,OAAK,2BACnC,SAACd,EAAD,CAAKe,IAAKD,EAAIE,aAAJ,UAbV,mCAaU,OAA4BF,EAAIE,cACtC,4FAA6FC,IAAKH,EAAII,aAC1G,wBAAKJ,EAAIK,iBACT,wCAAc,0BAAOL,EAAII,iBAJmBJ,EAAIM,QAAlB,OAKrB,oDAIxB,C,8LCzBKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAFiB,gCAIjB,IAAMC,EAAmB,mCAAG,8GAEMD,EAAAA,EAAAA,GAAM,8BAAD,OAA+BD,IAF1C,cAEdG,EAFc,yBAGbA,EAAYC,KAAKC,SAHJ,sCAKd,IAAIC,MAAJ,MALc,yDAAH,qDAAzB,SAWeC,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,iGAE8BP,EAAAA,EAAAA,GAAM,wBAAD,OAAyBD,EAAzB,kBAA0CQ,EAA1C,YAFnC,cAEcC,EAFd,yBAGeA,EAAQL,KAAKC,SAH5B,wHAUeK,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,iGAE6BV,EAAAA,EAAAA,GAAM,SAAD,OAAUU,EAAV,oBAAwBX,IAF1D,cAEcY,EAFd,yBAGeA,EAAOR,MAHtB,sCAKc,IAAIE,MAAJ,MALd,yFAUelB,EAAU,GAAVA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAyBuB,GAAzB,iGAE8BV,EAAAA,EAAAA,GAAM,SAAD,OAAUU,EAAV,4BAAgCX,IAFnE,cAEca,EAFd,yBAGeA,EAAQT,KAAKnB,MAH5B,sCAKc,IAAIqB,MAAJ,MALd,yFASeQ,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BH,GAA5B,iGAE8BV,EAAAA,EAAAA,GAAM,SAAD,OAAUU,EAAV,4BAAgCX,EAAhC,YAFnC,cAEca,EAFd,yBAGeA,EAAQT,KAAKC,SAH5B,sCAKc,IAAIC,MAAJ,MALd,gF","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","getApi/getApi.js"],"sourcesContent":["import styled from '@emotion/styled';\nexport const Img = styled.img`\nwidth:150px;\nheight:200px\n`;\n\nexport const List = styled.ul`\ndisplay:flex;\nflex-wrap:wrap;\ngap:5px;\n`;","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { fetchCast } from \"getApi/getApi\";\nimport { Img,List } from \"./Cast.styled\";\n\n const Cast = () => {\n    const { movieId } = useParams();\n    const URL = 'https://image.tmdb.org/t/p/w500';\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        fetchCast(movieId).then(res => setCast(res));\n\n\n    }, [movieId]);\n\n    return (\n        <>\n            \n            {cast.length ? <List>{cast.map(act => (<li key={act.cast_id}>\n                <Img src={act.profile_path ? `${URL}${act.profile_path}` :\n                    'https://t4.ftcdn.net/jpg/04/70/29/97/240_F_470299797_UD0eoVMMSUbHCcNJCdv2t8B2g1GVqYgs.jpg'} alt={act.character} />\n                <h4>{act.original_name}</h4>\n                <p>Character: <span>{act.character}</span></p></li>\n            ))}</List> : <p>Sorry data is not found</p>}\n            \n        </>\n    )\n}\n\nexport default Cast","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'c939ec4794622751dcf7fba01c4a07e9';\naxios.defaults.baseURL = BASE_URL;\n\nconst fetchTrendingMovies = async() => {\n    try {\n        const trendMovies = await axios(`trending/movie/day?api_key=${API_KEY}`);\n        return trendMovies.data.results;\n    } catch (error) {\n        throw new Error(error)\n    }\n}\n\n\n\nasync function fetchFilmByName(query){\n    try {\n        const nameMov = await axios(`search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n        return nameMov.data.results;\n    } catch (error) {\n        \n    }\n}\n\n\nasync function fetchMovieDetails(id) {\n    try {\n        const movDet = await axios(`movie/${id}?api_key=${API_KEY}`);\n        return movDet.data;\n    } catch (error) {\n        throw new Error(error)\n    }\n}\n\n\nasync function fetchCast(id) {\n    try {\n        const movCast = await axios(`movie/${id}/credits?api_key=${API_KEY}`);\n        return movCast.data.cast\n    } catch (error) {\n        throw new Error(error)\n    }\n}\n\nasync function fetchReviews(id) {\n    try {\n        const movCast = await axios(`movie/${id}/reviews?api_key=${API_KEY}&page=1`);\n        return movCast.data.results\n    } catch (error) {\n        throw new Error(error)\n    }\n}\n\n\nexport {fetchTrendingMovies, fetchFilmByName, fetchMovieDetails,fetchCast, fetchReviews}"],"names":["Img","styled","List","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","then","res","length","map","act","src","profile_path","alt","character","original_name","cast_id","API_KEY","axios","fetchTrendingMovies","trendMovies","data","results","Error","fetchFilmByName","query","nameMov","fetchMovieDetails","id","movDet","movCast","fetchReviews"],"sourceRoot":""}